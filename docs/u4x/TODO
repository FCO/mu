== Document base classes

For each of these (copied from STD.pm), a description, a short piece of code
with common usage, and a complete enumeration of methods accessible through
the class and through its ancestors should be provided:

    Object Any Junction Whatever
    Capture Match Signature Proxy Matcher
    Package Module Class Role Grammar
    Scalar Array Hash KeyHash KeySet KeyBag
    Pair List Seq Range Set Bag Mapping
    Void Undef Failure Exception
    Code Block Routine Sub Macro
    Method Submethod Regex
    Instant Duration

    Str Blob
    Char Byte Codepoint Grapheme StrPos StrLen Version

    Num Complex
    num complex

    Int  int   int1  int2  int4 int8  int16  int32  int64
    Rat  rat   rat1  rat2  rat4 rat8  rat16  rat32  rat64
    UInt uint uint1 uint2 uint4 uint8 uint16 uint32 uint64
    Buf  buf   buf1  buf2  buf4 buf8  buf16  buf32  buf64

    Bit Bool
    bit bool

    Order Increasing Decreasing
    Ordered Callable Positional Associative Abstraction
    Ordering KeyExtractor Comparator OrderingPair

    IO

    KitchenSink

== Predeclared constants

    True False Bool::True Bool::False
    Taint::Tainted Taint::Untainted

== Ambient subs/methods/macros

    WHAT WHERE HOW WHICH VAR WHO WHENCE HOW new
    any all none one
    not true

    die exit warn fail
    caller want
    eval evalfile
    callsame callwith nextsame nextwith lastcall
    defined undefine item list slice eager hyper

    cat classify
    quotemeta
    chr ord
    p5chop chop p5chomp chomp trim
    index rindex substr
    join split comb pack unpack
    uc ucfirst lc lcfirst
    normalize
    nfc nfd nfkc nfkd
    samecase sameaccent
    capitalize
    chars graphs codes bytes

    say print open close printf sprintf slurp unlink link symlink
    elems grep map first reduce sort uniq push reverse take splice
    lines getc

    zip each roundrobin caller
    return leave pop shift unshift reduce
    keys values hash kv key value pairs pair

    sign abs floor ceiling round truncate
    exp log log10 sqrt roots
    rand srand pick
    cis unpolar

    sin cos tan asin acos atan sec cosec cotan asec acosec
    acotan sinh cosh tanh asinh acosh atanh sech cosech cotanh
    asech acosech acotanh atan2

    plan is ok dies_ok lives_ok skip todo pass flunk force_todo use_ok
    isa_ok cmp_ok diag is_deeply isnt like skip_rest unlike nonce
    skip_rest eval_dies_ok eval_lives_ok approx is_approx throws_ok version_lt

    gmtime localtime time times
    gethost getpw chroot getlogin
    run runinstead
    fork wait kill sleep

== No longer subs/methods

    ref length bless delete exists

== Control flow and statement prefixes

    if unless when while until for loop given
    do try gather contend async maybe lazy lift

== Declaration keywords

    class role enum package module subset
    is has does will but also instead trusts handles where of as returns
    rw readonly
    only multi proto default
    sub method submethod
    regex token rule
    my our constant

== Terms

    next last redo break continue goto self defer rand e i pi Inf NaN * **
    ... ??? !!!

== Special block types

    BEGIN CHECK INIT END START ENTER LEAVE KEEP
    UNDO FIRST NEXT LAST PRE POST CATCH CONTROL TEMP

== Obsolete magical variables

    $] $\ $| $: $; $' $" $, $< $> $. $?

== Sigils

    $ @ @@ % &

== Twigils

    . ! ^ : * ? =

== Base prefixes

    0b 0o 0x 0d

== Quote operators

    q: qq: Q:
    :w :ww :x :to :s :a :h :f :c :b
    rx m mm s ss tr

== Postfix operators

    ++ --
    -> (obsolete, refer to .)

== Prefix operators

    ++ -- ! + - ? = ~^ ?^ ^ |
    sleep abs int let temp true not

== Infix operators

    * ** / div % +& +< << >> +> ~& ?& ~< ~>
    + - +| +^ ~| ~^ ?| ?^
    x xx ~ & also | ^ =
    cmp leg but does .. ^.. ..^ ^..^
    ff ^ff ff^ ^ff^ fff ^fff fff^ ^fff^
    == != < <= > >= ~~ !~ (obsolete) =~ (obsolete)
    eq ne lt le gt ge =:= +++ eqv && || ^^ // min max
    C<?? !!> C<? :> (obsolete)
    = := ::= .= =>
    , : p5=> X Z minmax ...
    and andthen or orelse xor ; <== ==> <<== ==>>

== Expression terminators

    ; if unless while until for given when -->

== Grammar/regex builtin rules

  ident upper lower alpha digit xdigit space print
  graph blank cntrl punct alnum ws wb before after ww

== Special Perl and Perl 6 terms

    autovivify stringify numify boolify timtowtdi greedy waterbed
    protoobject metaclass texas french invocant
    mmd autothread pun attribute interpolate trait lvalue candidate
    mutator 'abstract object' topic topicalizer diffy iffy fiddly
    variadic slurpy capture required optional positional named

== Misc

* A really, really good guide to blocks and closures. Specifically to explain
  the (possibly unintuitive) behavior of 'return' in blocks.

* A fantastically well-thought-out OO guide, the Divina Commedia of Perl 6
  object orientation.

* Feel free to rip off stuff from misc/perlhints/data, it was written in a
  similar spirit, but with less plan.
