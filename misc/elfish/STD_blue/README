STD_blue is a src/perl6/gimme5 based parser for elf.

QUICKSTART

$ make elfblue
$ make check
$ ./elfblue -v -s -e 'say 3'
$ make does_gimme5_memory_problem_still_exist


STATUS

Can self-compile, and compile a tweaked version of elf_h.

Works sufficiently for the next step on the path to bootstrap.

PrimitivesP5.pm is a tweaked copy of elf_h's - gimme5 takes more memory
than I have available to compile the original.

IRx1_FromAST2_create.pl is a mess, with an unfortunate quantity of broken
legacy code.  The only objective was "get to self compilation", so general
p6 support is lacking, even by elf standards.


VISION

Combine elfblue, elf_h, and rx_on_re, and teach them to compile and
run STD.pm.  Thus permitting the front-end to be bootstrapped.

gimme5, and thus STD_blue, is not quite ready to replace STD_red as
the primary elf parser.
 Speed has greatly improved - is it comparable yet?
 Memory usage on encountering foofix:<bar> decls is a non-starter?
  (but... could :sym<>-ify elf?).
 elf IRFromAST2 support for STD_blue's AST needs work.
 If running STD.pm using rx_on_re in elf works out, then switching isn't
  critical path.  But if it bogs down, that may change..


NOTES

make check  runtime:
r24098 takes me 9m35s'user (with STD_red cached, and STD_blue not cached).
