diff --git a/v6/re-smop/m0ld/m0ld.hs b/v6/re-smop/m0ld/m0ld.hs
index 958fc6b..ffee1a0 100644
--- a/v6/re-smop/m0ld/m0ld.hs
+++ b/v6/re-smop/m0ld/m0ld.hs
@@ -21,18 +21,23 @@ eval code = evalM0ld code
 #else
 eval code = putStrLn "--exec use ./Setup configure --user --flags=SMOP"
 #endif
+spec = [("print-bytecode","print resulting mold bytecode in a human readable form"),
+            ("exec","execute the m0ld"),
+            ("lost-funcs","compile down to a LOST frame (the functions for the frame)"),
+            ("lost-create","compile down to a LOST frame (the expression to create the frame)")]
 main = do
     args <- getArgs
-    let (options,nonoptions,errors) =  getOpt RequireOrder [Option [] ["print-bytecode"] (NoArg "print-bytecode") "print resulting mold bytecode in a human readable form", Option [] ["exec"] (NoArg "exec") "execute the m0ld",Option [] ["lost"] (NoArg "lost") "compile down to a LOST frame" ] args 
+    let (options,nonoptions,errors) = getOpt RequireOrder $ map (\(opt,desc) -> Option [] [opt] (NoArg opt) desc) spec
     mapM putStr errors
     hFlush stdout
     code <- getContents
-    if elem "lost" options
-        then let 
+    if elem "lost-create" options then let 
             (funcs,lost,_) = compileToLOST ("foo",0) $ parseM0ld code in
-            putStrLn $ (concat funcs) ++ lost
-
+            putStrLn lost
+        else if elem "lost-funcs" options then let 
+            (funcs,lost,_) = compileToLOST ("foo",0) $ parseM0ld code in
+                putStrLn $ (concat funcs)
         else if elem "print-bytecode" options
-            then putStrLn $ prettyPrintBytecode "" $ parseM0ld code
-            else if elem "exec" options then eval code
-            else putStrLn $ dumpToC $ parseM0ld code
+        then putStrLn $ prettyPrintBytecode "" $ parseM0ld code
+        else if elem "exec" options then eval code
+        else putStrLn $ dumpToC $ parseM0ld code
