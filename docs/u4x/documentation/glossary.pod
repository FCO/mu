=begin glossary

=head1 Anonymous

A construct is called I<anonymous> if it doesn't have a name.

    # named subroutine
    sub double($x) { 2 * $x };

    # anonymous subroutine, stored in a named scalar
    my $double = sub ($x) { 2 * $x };

=head1 Autothreading

Autothreading is what happens if you pass a junction to a sub that
expects a parameter of type C<Any> or a subtype thereof. The call is
executed multiple times, each time with a different eigenstate of the
junction. The result of these calls is assembled in a junction of the
same type as the original junction.

    sub f($x) { 2 * $x };
    if f(1|2|3) == 4 {
        say 'success';
    }

Here C<f()> is a sub with one parameter, and since it has no explicit
type is implicitly typed as C<Any>.  The C<Junction> argument causes
the C<f(1|2|3)> call to be internally executed as C<f(1)|f(2)|f(3)>,
and the resulting junction is C<2|4|6>. This process of separating
Junction arguments into multiple calls to a function
is what we call I<autothreading>.

=head1 Slurpy

A parameter of a sub or method is said to be I<slurpy> if it can
consume an arbitrary number of arguments. It is indicated by an
asterisk C<*> in front of the parameter name.

    sub sum (*@numbers) {
        return [+] @numbers;
    }

=head1 lvalue

A I<lvalue> or I<left value> is anything that can appear on the left
hand side of the assignment operator C<=>, ie anything you can assign
to.

Typical lvalues are variables, private and C<is rw> attributes, lists
of variables  and lvalue subroutines.

Examples of lvalues:

    Declaration             lvalue          Comments

    my $x;                  $x
    my ($a, $b);            ($a, $b)
    has $!attribute;        $!attribute     Only inside classes
    has $.attrib is rw;     $.attrib
    sub a is rw { $x };     a()

Examples of things that are not lvalues

   3                        # literal s
   constant x = 3;          # constants
   has $.attrib;            # attributes; you can only assign to $!attrib
   sub f { }; f();          # "normal" subs are not writable
   sub f($x) { $x = 3 };    # error - parameters are read-only by default


=end glossary

# vim: ft=perl6 tw=70
