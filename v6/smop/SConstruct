import re
BuildDir('build','src')
BuildDir('build-tests','test')
env = Environment()

# TODO windowsify
env.Append(BUILDERS = {'M0ldCompiler' : Builder(action = 'cd m0ld;./Setup configure;./Setup build;cp dist/build/m0ld/m0ld ../$TARGET')})
m0ld = env.M0ldCompiler('X','m0ld/m0ld.hs')
m0ld_path = './' + str(m0ld[0])
env.Append(BUILDERS = {'RI' : Builder(action = 'perl  -I../../src/perl6 tools/ri . %s < $SOURCE > $TARGET' % m0ld_path,suffix='.c',src_suffix = '.ri')})

env.Append(BUILDERS = {'Sm0p' : Builder(action = 'perl sm0p.pl . %s $SOURCE $TARGET' % m0ld_path,suffix='.c',src_suffix = '.sm0p')})

env.Append(BUILDERS = {'M0ld' : Builder(action = 'cat m0ld/m0ld_boilerplate_front > $TARGET;%s < $SOURCE >> $TARGET;cat m0ld/m0ld_boilerplate_back >> $TARGET' % m0ld_path,suffix='.c',src_suffix = '.m0ld')})
        
for file in Glob("build/*.ri"):
    env.RI(file)
for file in Glob("build/*.sm0p"):
    env.Sm0p(file)

files = Glob('build/*.c')

import subprocess # python has `` in a strange module :\
ccopts = subprocess.Popen(["perl","-MExtUtils::Embed","-e","ccopts"], stdout=subprocess.PIPE).communicate()[0].rstrip()
ldopts = subprocess.Popen(["perl","-MExtUtils::Embed","-e","ldopts"], stdout=subprocess.PIPE).communicate()[0].rstrip()
flags = '-O0 -g3 -DSMOP_LOWLEVEL_MEM_TRACE '
SharedLibrary(target = 'build/smop',source = files,CFLAGS=flags+ccopts,CPPPATH = ['src','include'])

tests = Split("""
    build-tests/03_const_identifier.c
    build-tests/04_interpreter.c
    build-tests/05_capture.c
    build-tests/06_native_bool.c
    build-tests/07_int.c
    build-tests/07_native_int.c
    build-tests/08_native_uint.c
    build-tests/10_lowlevel_methods.c
    build-tests/20_smop_s1p_ccode.c
    build-tests/21_code.m0ld
    build-tests/23_mold.sm0p
    build-tests/24_m0ld.m0ld
    build-tests/30_array_map.m0ld
    build-tests/31_int_postfix_plusplus.m0ld
    build-tests/32_array_iterator.m0ld
    build-tests/34_array_unshift.m0ld
    build-tests/35_array_grep.m0ld
    build-tests/36_adhoc_signature.m0ld
    build-tests/37_multisub.m0ld
    build-tests/38_ritest.m0ld
    build-tests/39_pcl.c""")

print ldopts
LIBS = re.compile("-l(\S+)").findall(ldopts)
LIBPATH = re.compile("-L(\S+)").findall(ldopts)
print LIBS
print LIBPATH
for test in tests:
    if re.match(r'^.*\.c',test):
        env.Program(re.sub(r'.c$','.t',test),test,CPPPATH = ['include'],LIBPATH=LIBPATH+['build'],LIBS=LIBS+['smop','pcl','pthread'])
    elif re.match(r'^.*\.m0ld',test):
        env.M0ld(test) 
        env.Program(re.sub(r'.m0ld$','.t',test),re.sub(r'.m0ld$','.c',test),CPPPATH = ['include'],LIBPATH=LIBPATH+['build'],LIBS=['smop','pcl','pthread']+LIBS)
