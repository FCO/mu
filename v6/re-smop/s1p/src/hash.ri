%RI.id s1p Hash
%prefix smop_s1p_hash
%{
SMOP__Object* SMOP__S1P__Hash_create(void) {
    smop_s1p_hash_struct* ret = (smop_s1p_hash_struct*) smop_nagc_alloc(sizeof(smop_s1p_hash_struct));
    ret->RI = (SMOP__ResponderInterface*)RI;
    return (SMOP__Object*) ret;
}
%}
%method new
    ret = SMOP__S1P__Hash_create();

%method FETCH
    ___VALUE_FETCH___;
%method STORE
    ___VALUE_STORE___;

%method postcircumfix:{ }
    SMOP__Object* key = SMOP__NATIVE__capture_positional(interpreter,capture,1);
    ret = SMOP__S1P__Hash_BValue_create(interpreter,SMOP_REFERENCE(interpreter,(SMOP__Object*)invocant),SMOP_REFERENCE(interpreter,key));
%method exists
    printf("Hash.exists\n");
    ret = SMOP__NATIVE__bool_true;
