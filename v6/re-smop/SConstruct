import re
import os
import glob
BuildDir('build','src')
BuildDir('build-tests','test')
env = Environment(ENV = os.environ)

# TODO windowsify

# SCons runs the command incorrectly
#m0ld = env.Command('m0ld_exe','m0ld/m0ld.hs','sh -c "cd m0ld;ghc --make Setup.lhs;pwd;./Setup configure;pwd;./Setup build;cp dist/build/m0ld/m0ld ../$TARGET"')
#m0ld_path = './' + str(m0ld[0])
m0ld_path = './m0ld_exe'

env.Append(BUILDERS = {'RI' : Builder(action = 'perl  -I../../src/perl6 tools/ri . %s < $SOURCE > $TARGET' % m0ld_path,suffix='.c',src_suffix = '.ri')})

env.Append(BUILDERS = {'Sm0p' : Builder(action = 'perl sm0p.pl . %s $SOURCE $TARGET' % m0ld_path,suffix='.c',src_suffix = '.sm0p')})

env.Append(BUILDERS = {'M0ld' : Builder(action = 'cat m0ld/m0ld_boilerplate_front > $TARGET;%s < $SOURCE >> $TARGET;cat m0ld/m0ld_boilerplate_back >> $TARGET' % m0ld_path,suffix='.c',src_suffix = '.m0ld')})
        
#for file in Glob("build/*.sm0p"):
#    env.Sm0p(file)


import subprocess # python has `` in a strange module :\
ccopts = subprocess.Popen(["perl","-MExtUtils::Embed","-e","ccopts"], stdout=subprocess.PIPE).communicate()[0].rstrip()
ldopts = subprocess.Popen(["perl","-MExtUtils::Embed","-e","ldopts"], stdout=subprocess.PIPE).communicate()[0].rstrip()
flags = '-O0 -g3 -Wall -DSMOP_HUNT_NULLS ' # -DSMOP_LOWLEVEL_MEM_DEBUG -DSMOP_MOLD_DEBUG


modules = ['s0native','nagc','util','capture','interpreter','mold','native','s1p','lost','p6opaque']

INCLUDE = ['base/include','util/include']
for module in modules:
    BuildDir('build/'+module,module)
    INCLUDE.append(module + '/include')
    for file in Glob('build/' + module + '/src/*.ri'):
        env.RI(file)
    files = env.Glob('build/' + module + '/src/*.c')
    env.SharedLibrary(target = 'build/lib/smop-'+module, source = files, CFLAGS=flags+ccopts, CPPPATH=[module+'/src'] + INCLUDE)

LIBPATH = []

LIBS = ['pthread','m','dl']
INCLUDE = ['base/include']


for module in modules:
    BuildDir('build/t/'+module,module+'/t')
    INCLUDE.append(module + '/include')
    LIBS.append('smop-'+module)
    for test in env.Glob("build/t/" + module + "/*.m0ld"):
        env.M0ld(test) 
    for test in env.Glob("build/t/" + module + "/*.c"):
        env.Program(re.sub(r'.c$','.t',str(test)),test,CFLAGS=flags+ccopts,CPPPATH = INCLUDE,LIBPATH=LIBPATH+['build/lib'],LIBS=LIBS)


env.SharedLibrary(target = 'build/lib/mildew', source = [], CFLAGS=flags+ccopts, LIBPATH=LIBPATH+['build/lib'], LIBS=LIBS)

#LIBS = re.compile("-l(\S+)").findall(ldopts)
#LIBPATH = re.compile("-L(\S+)").findall(ldopts)

#for test in env.Glob("build-tests/*.c"):
#    env.Program(re.sub(r'.c$','.t',str(test)),test,CPPPATH = INCLUDE,LIBPATH=LIBPATH+['build'],LIBS=LIBS+['smop','pcl','pthread'])
#
