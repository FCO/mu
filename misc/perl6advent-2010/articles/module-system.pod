=head1 Writing the Perl 6 modules

The Perl 6 module database on L<http://modules.perl6.org> is certainly
not CPAN yet, but there are still a number of things worth using, or
at least knowing about. There's no "standard" module installer for
Perl 6, like there's a cpan shell for Perl 5, but the most commonly used
and most often working is L<neutro|https://github.com/tadzik/neutro>.
It's a simple script fetching, building, and installing modules from
L<the ecosystem|https://github.com/perl6/ecosystem>, resolving
dependencies and checking if the tests are passing: not much more we
need. Let's see how to install something interesting with it, say
L<JSON::Tiny|https://github.com/moritz/json/>, a JSON parser.

First, we need to get neutro. We will assume you use git to obtain it;
notice that git is also obligatory to download modules (all of them
live on github currently).

    git clone git://github.com/tadzik/neutro.git
    cd neutro
    PERL6LIB=tmplib bin/neutro .

That will download neutro and bootstrap it using the supplied libs.
What we end up is the module installer itself, and the File::Tools and
Module::Tools distributions. From now on, assuming C<~/.perl6/bin> is in
your PATH and C<~/.perl6/lib> is in your PERL6LIB (check your
C<~/.profile> or C<~/.bashrc> to be sure), you will be able to install
modules as simply as with cpanminus:
    
    neutro json
    neutro perl6-Term-ANSIColor
    neutro perl6-lwp-simple

You may notice module names are not similar to what you may be used to
from Perl 5. They're not standarized, they're just the names of a git
repos they live in. To make sure what you are looking for, consult the
list:
    
    neutro update # fetch the fresh list of modules
    neutro list

Modules will be installed to C<~/.perl6/lib> as well, so assuming your
PERL6LIB is alredy set, you are now able to use the installed modules:

    perl6 -e 'use Term::ANSIColor; say colored("Hello blue world!", "blue")'

=head2 The module ecosystem

You probably just can't wait to write your first module and make it
available for the whole world. There's no CPAN where you can send your
packages; the usual workflow is creating a repository on L<Github|http://github.com> and adding it to the L<projects.list|https://github.com/perl6/ecosystem/blob/master/projects.list>
file in the L<ecosystem|https://github.com/perl6/ecosystem>. You don't
need to have a direct access to the repo to get your module published.
You can either send a pull request for your forked ecosystem repo,
send a patch, or just ask some of the commiters or people on the #perl6
channel of Freenode.

TBD: Link to module writing guide, anything else?
